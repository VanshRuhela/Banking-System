{"version":3,"sources":["components/Customer/Customer.module.css","containers/Transfer/Transfer.module.css","components/Home/Home.module.css","components/Header/Header.module.css","containers/Customers/Customers.module.css","containers/Customers/Customer/Customer.module.css","containers/Receiver/Receiver.module.css","components/Result/Result.module.css","containers/Transactions/Transactions.module.css","containers/Transactions/Transaction/Transaction.module.css","components/Header/Header.js","store/actions/actionTypes.js","store/actions/user.js","store/actions/transfer.js","store/actions/transaction.js","components/Home/Home.js","containers/Customers/Customer/Customer.js","containers/Customers/Customers.js","components/Customer/Customer.js","containers/Receiver/Receiver.js","containers/Transfer/Transfer.js","components/Result/Result.js","containers/Transactions/Transaction/Transaction.js","containers/Transactions/Transactions.js","components/Layout/Layout.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/user.js","store/reducers/transfer.js","store/reducers/transaction.js","index.js"],"names":["module","exports","Header","className","classes","navbarDark","style","fontSize","to","textDecoration","color","GET_ALL_USERS","ADD_SENDER","ADD_RECEIVER","TRANSFER_SUCCESS","TRANSFER_COMPLETE","GET_ALL_TRANSACTIONS","getAllUsers","dispatch","axios","get","then","response","data","type","actionTypes","catch","error","console","log","updateBalances","sData","rData","put","id","toast","success","err","updateReceiver","getTransactions","Home","state","this","props","getAllTransactions","spbg","headtext","headtext2","fsbtn","Component","connect","actions","Customer","link","onClick","clik","custRow1","index","user","username","email","mobileNumber","currentBalance","Customers","updateTransfer","custRow","users","map","addSender","Math","random","toString","substr","sender","transfer","custImg","alt","src","custDetails","custElement","btnGroup","Receiver","newUsers","filter","addReceiver","Transfer","amount","onAmountChange","event","setState","target","value","balanceUpdates","test","tData","receiver","parseInt","addTransaction","outerForm","transferForm","formRow","disabled","name","placeholder","onChange","amountInput","sd","rd","post","result","Transaction","border","transaction","borderRight","Transactions","Object","keys","transactions","Layout","path","component","Result","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","loading","reducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","defaults","baseURL","rootReducer","combineReducers","userReducer","transferReducer","transactionReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7a91e06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"custImg\":\"Customer_custImg__2m_1W\",\"custDetails\":\"Customer_custDetails__1OEOc\",\"custElement\":\"Customer_custElement__1reWM\",\"btnGroup\":\"Customer_btnGroup__3VYbe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerForm\":\"Transfer_outerForm__1HKzL\",\"transferForm\":\"Transfer_transferForm__12LHd\",\"formRow\":\"Transfer_formRow__-sqz0\",\"amountInput\":\"Transfer_amountInput__2Hnb4\",\"btnGroup\":\"Transfer_btnGroup__2UMco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headtext\":\"Home_headtext__Opa7n\",\"headtext2\":\"Home_headtext2__2SeRU\",\"fsbtn\":\"Home_fsbtn__2HH1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarDark\":\"Header_navbarDark___2ybb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeader\":\"Customers_tableHeader__-MQSC\",\"custRow\":\"Customers_custRow__2mJGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custRow1\":\"Customer_custRow1__1OxSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeader\":\"Receiver_tableHeader__2fwq7\",\"custRow\":\"Receiver_custRow__27X7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"Result_result__3zfur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custRow\":\"Transactions_custRow__3J7M1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custRow1\":\"Transaction_custRow1__10mLT\"};","import React from 'react';\nimport classes from './Header.module.css';\n\nimport {NavLink} from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <nav className={classes.navbarDark + \" navbar\"}>\n            <div className=\"container\">\n                <p className=\"navbar-brand mx-auto font-weight-bold my-0\" style={{fontSize: \"2em\"}}>\n                    <NavLink to=\"/\" style={{\n                        textDecoration: \"none\",\n                        color: \"floralwhite\"\n                    }}>The SPARK Banking System\n                    </NavLink>\n                </p>\n            </div>\n        </nav>\n    );\n}\n \nexport default Header;","export const GET_ALL_USERS = \"GET_ALL_USERS\";\n\nexport const ADD_SENDER = \"ADD_SENDER\";\nexport const ADD_RECEIVER = \"ADD_RECEIVER\";\n\nexport const UPDATE_BALANCES = \"UPDATE_BALANCES\";\nexport const TRANSFER_SUCCESS = \"TRANSFER_SUCCESS\";\n\nexport const TRANSFER_COMPLETE = \"TRANSFER_COMPLETE\";\n\nexport const GET_ALL_TRANSACTIONS = \"GET_ALL_TRANSACTIONS\";","import axios from 'axios';\nimport * as actionTypes from '../actions/actionTypes';\n\nconst addAllUsers = (data) => {\n    return {\n        type: actionTypes.GET_ALL_USERS,\n        data: data\n    }\n}\n\nexport const getAllUsers = () => {\n    return dispatch => {\n        axios.get(\"users.json\").then(response => {\n            dispatch(addAllUsers(response.data));\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n}","import axios from 'axios';\nimport * as actionTypes from '../actions/actionTypes';\nimport {toast} from 'react-toastify';\n\nexport const addSender = (data) => {\n    toast.success(\"Sender selected\");\n    return {\n        type: actionTypes.ADD_SENDER,\n        data: data\n    }\n}\n\nexport const addReceiver = (data) => {\n    toast.success(\"Receiver selected\");\n    return {\n        type: actionTypes.ADD_RECEIVER,\n        data: data\n    }\n}\n\n// const updateTransfer = () => {\n//     return {\n//         type: actionTypes.TRANSFER_SUCCESS\n//     }\n// }\n\nconst updateReceiver = rData => {\n    return dispatch => {\n        axios.put(\"users/\"+rData.id+\".json\", rData)\n            .then(response => {\n                toast.success(\"Transfer Succesful\");\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n}\n\nexport const updateBalances = (sData, rData) => {\n    return dispatch => {\n        axios.put(\"users/\"+sData.id+\".json\", sData)\n            .then(response => {\n                // dispatch(updateTransfer());\n                dispatch(updateReceiver(rData));\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n}","import axios from 'axios';\nimport * as actionTypes from '../actions/actionTypes';\n\nconst addAllTransactions = (data) => {\n    return {\n        type: actionTypes.GET_ALL_TRANSACTIONS,\n        data: data\n    }\n}\n\nexport const getTransactions = () => {\n    return dispatch => {\n        axios.get(\"transactions.json\").then(response => {\n            dispatch(addAllTransactions(response.data));\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n}\n\nexport const addTransaction = (data) => {\n    return dispatch => {\n        axios.post(\"transactions.json\", data).then(response => {\n            console.log(response.data);\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n}","import React, { Component } from 'react';\nimport classes from './Home.module.css';\n\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nclass Home extends Component {\n    state = {  }\n    componentWillMount() {\n        this.props.getAllTransactions();      \n    }\n    render() {\n        return (\n            <div className={classes.spbg + \" container align-items-center mt-5\"}>\n                <div className=\"row justify-content-center\">\n                    <p className={classes.headtext + \" text-white font-weight-bold my-3\"}></p>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <p className={classes.headtext2 + \" text-white font-weight-bold mb-2\"}>Taking Banking Technology to the Common Man</p>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <NavLink to=\"/customers\" style={{\n                        textDecoration: \"none\"\n                    }}>\n                        <p className={classes.fsbtn + \" btn btn-success my-3 mx-2\"}>\n                            Make Transfer\n                        </p>\n                    </NavLink>\n                    <NavLink to=\"/transfers\" style={{\n                        textDecoration: \"none\"\n                    }}>\n                        <p className={classes.fsbtn + \" btn btn-primary my-3 mx-2\"}>\n                            View All Transfers\n                        </p>\n                    </NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchtoProps = dispatch => {\n    return {\n        getAllTransactions: () => dispatch(actions.getTransactions())\n    }\n}\n \nexport default connect(null, mapDispatchtoProps)(Home);","import React from 'react';\nimport classes from './Customer.module.css';\n\nimport {NavLink} from 'react-router-dom';\n\nconst Customer = (props) => {\n    return (\n        <NavLink to={props.link} onClick={props.clik} className={classes.custRow1}>\n            <p>{props.index}</p>\n            <p>{props.user.username}</p>\n            <p>{props.user.email}</p>\n            <p>{props.user.mobileNumber}</p>\n            <p>{props.user.currentBalance}</p>\n        </NavLink>\n    );\n}\n \nexport default Customer;","import React, { Component } from 'react';\nimport classes from './Customers.module.css';\n\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Customer from './Customer/Customer';\nimport * as actionTypes from '../../store/actions/actionTypes';\n\nclass Customers extends Component {\n    state = {  }\n\n    componentWillMount() {\n        this.props.getAllUsers();\n        this.props.updateTransfer();       \n    }\n    render() { \n        return (\n            <div className=\"container py-5\">\n                <h1>Send money from....</h1>\n                <div className={classes.custRow}>\n                    <p>Sl No</p>\n                    <p>User Name</p>\n                    <p>Email</p>\n                    <p>Mobile Number</p>\n                    <p>Current Balance</p>\n                </div>\n                {this.props.users.map((user, index) => (\n                    <Customer user={user} \n                            key={'_' + Math.random().toString(36).substr(2, 9)}\n                            index={index+1}\n                            clik={() => this.props.addSender(user)}\n                            link={\"/customer/\"+index} />\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    return {\n        users: state.user.users\n    }\n}\n\nconst mapDispatchtoProps = dispatch => {\n    return {\n        getAllUsers: () => dispatch(actions.getAllUsers()),\n        addSender: (data) => dispatch(actions.addSender(data)),\n        updateTransfer: () => dispatch({type: actionTypes.TRANSFER_COMPLETE})\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Customers);","import React from 'react';\nimport classes from './Customer.module.css';\n\nimport {connect} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\n\nconst Customer = (props) => {\n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">\n                <img className={classes.custImg} \n                    alt=\"profile\" \n                    src=\"https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg\" />\n            </div>\n            <div className={classes.custDetails}>\n                <div className={classes.custElement + \" row justify-content-center\"}>\n                    <h3>UserName</h3>\n                    <p>{props.sender.username}</p>\n                </div>\n                <div className={classes.custElement}>\n                    <h3>Email</h3>\n                    <p>{props.sender.email}</p>\n                </div>\n                <div className={classes.custElement + \" row justify-content-center\"}>\n                    <h3>Mobile Number</h3>\n                    <p>{props.sender.mobileNumber}</p>\n                </div>\n                <div className={classes.custElement + \" row justify-content-center\"}>\n                    <h3>Current Balance</h3>\n                    <p>{props.sender.currentBalance}</p>\n                </div>\n            </div>\n            <div className={classes.btnGroup}>\n                <NavLink to=\"/receiver\">\n                    <button className=\"btn btn-primary\">Proceed</button>\n                </NavLink>\n                <NavLink to=\"/customers\">\n                    <button className=\"btn btn-danger\">Go Back</button>\n                </NavLink>\n            </div>\n        </div>\n    );\n}\n\nconst mapStatetoProps = state => {\n    return {\n        sender: state.transfer.sender\n    }\n}\n \nexport default connect(mapStatetoProps)(Customer);","import React, { Component } from 'react';\nimport classes from './Receiver.module.css';\n\nimport {connect} from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Customer from '../Customers/Customer/Customer';\n\nclass Receiver extends Component {\n    state = {  }\n    render() {\n        const newUsers = this.props.users.filter(user => user.email!==this.props.sender.email);\n        return (\n            <div className=\"container py-5\">\n                <h1>Send money to....</h1>\n                <div className={classes.custRow}>\n                    <p>Sl No</p>\n                    <p>User Name</p>\n                    <p>Email</p>\n                    <p>Mobile Number</p>\n                    <p>Current Balance</p>\n                </div>\n                {newUsers.map((user, index) =>\n                    <Customer user={user} \n                            key={'_' + Math.random().toString(36).substr(2, 9)}\n                            index={index+1}\n                            clik={() => this.props.addReceiver(user)}\n                            link={\"/transfer\"} />\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    return {\n        users: state.user.users,\n        sender: state.transfer.sender\n    }\n}\n\nconst mapDispatchtoProps = dispatch => {\n    return {\n        addReceiver: (data) => dispatch(actions.addReceiver(data))\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Receiver);","import React, { Component } from 'react';\nimport classes from './Transfer.module.css';\n\nimport {connect} from 'react-redux';\nimport {NavLink} from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\nimport * as actionTypes from '../../store/actions/actionTypes';\n\nimport {toast} from 'react-toastify';\n\nclass Transfer extends Component {\n    state = {\n        amount: \"\"\n    }\n    onAmountChange = (event) => {\n        this.setState({amount: event.target.value});\n    }\n    balanceUpdates = () => {\n        const pattern = /^\\d+$/;\n\n        if(!pattern.test(this.state.amount)){\n            toast.error(\"Invalid amount\");\n            const tData = {\n                sender: this.props.sender.email,\n                receiver: this.props.receiver.email,\n                amount: parseInt(this.state.amount),\n                state: \"failure\"\n            }\n            this.props.addTransaction(tData);\n        }else if(this.state.amount > this.props.sender.currentBalance){\n            toast.error(\"Transfer amount larger than sender balance\");\n            const tData = {\n                sender: this.props.sender.email,\n                receiver: this.props.receiver.email,\n                amount: parseInt(this.state.amount),\n                state: \"failure\"\n            }\n            this.props.addTransaction(tData);\n        }else{\n            this.props.updateTransfer();\n            const sData = {\n                ...this.props.sender,\n                currentBalance: this.props.sender.currentBalance - this.state.amount\n            };\n            const rData = {\n                ...this.props.receiver,\n                currentBalance: parseInt(this.props.receiver.currentBalance) + parseInt(this.state.amount)\n            }\n            this.props.updateBalances(sData, rData);\n            const tData = {\n                sender: sData.email,\n                receiver: rData.email,\n                amount: parseInt(this.state.amount),\n                state: \"success\"\n            }\n            this.props.addTransaction(tData);\n        }\n    }\n    render() { \n        return (\n            <div className=\"container mt-5\">\n                <div className={classes.outerForm + \" shadow bg-white py-4\"}>\n                    <h1>Transfer Form</h1>\n                    <form className={classes.transferForm}>\n                        <div className={classes.formRow}>\n                            <input type=\"text\" disabled name=\"sender\" \n                            value={\"Sender :: \"+this.props.sender.username} />\n                            <input type=\"text\" disabled\n                            value={\"Balance :: \"+this.props.sender.currentBalance} />\n                        </div>\n                        <div className={classes.formRow}>\n                            <input type=\"text\" disabled name=\"receiver\" \n                            value={\"Receiver :: \"+this.props.receiver.username} />\n                            <input type=\"text\" disabled\n                            value={\"Balance :: \"+this.props.receiver.currentBalance} />\n                        </div>\n                        <input type=\"text\" placeholder=\"Transfer Amount\"\n                                value={this.state.amount}\n                                onChange={this.onAmountChange}\n                                className={classes.amountInput} />\n                        <div className={classes.btnGroup}>\n                            <NavLink to=\"/result\">\n                                <button onClick={this.balanceUpdates} className=\"btn btn-success\">Transfer</button>\n                            </NavLink>\n                            <NavLink to=\"/\">\n                                <button className=\"btn btn-danger\">Cancel</button>\n                            </NavLink>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    return {\n        sender: state.transfer.sender,\n        receiver: state.transfer.receiver\n    }\n}\n\nconst mapDispatchtoProps = dispatch => {\n    return {\n        updateBalances: (sd, rd) => dispatch(actions.updateBalances(sd, rd)),\n        updateTransfer: () => dispatch({type: actionTypes.TRANSFER_SUCCESS}),\n        addTransaction: (data) => dispatch(actions.addTransaction(data))\n    }\n}\n \nexport default connect(mapStatetoProps, mapDispatchtoProps)(Transfer);","import React from 'react';\nimport classes from './Result.module.css';\n\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst Result = (props) => {\n    return (\n        <div className={classes.result + \" container\"}>\n            <img className=\"my-3\" alt=\"success\" src={props.transfer ? \"/success1.jpg\" : \"/fail.jpg\"} />\n            <h3>Transfer {props.transfer ? \"Successful\" : \"Failed\"}</h3>\n            <NavLink to=\"/\">\n                <button className=\"btn btn-danger\">Go back to Home</button>\n            </NavLink>\n        </div>\n    );\n}\n\nconst mapStatetoProps = state => {\n    return {\n        transfer: state.transfer.transfer\n    }\n}\n \nexport default connect(mapStatetoProps)(Result);","import React from 'react';\nimport classes from './Transaction.module.css';\n\n\nconst Transaction = (props) => {\n    let border = null;\n    if(props.transaction.state===\"success\"){\n        border = {borderRight: \"5px solid green\"}\n    }else if(props.transaction.state===\"failure\"){\n        border = {borderRight: \"5px solid red\"}\n    }\n    return (\n        <div className={classes.custRow1} style={border}>\n            <p>{props.index}</p>\n            <p>{props.transaction.sender}</p>\n            <p>{props.transaction.receiver}</p>\n            <p>{props.transaction.amount}</p>\n            <p>{props.transaction.state}</p>\n        </div>\n    );\n}\n \nexport default Transaction;","import React, { Component } from 'react';\nimport classes from './Transactions.module.css';\n\nimport {connect} from 'react-redux';\nimport Transaction from './Transaction/Transaction';\n\n\nclass Transactions extends Component {\n\n    // componentWillMount() {\n    //     this.props.getAllTransactions();      \n    // }\n    render() { \n        return (\n            <div className=\"container py-5\">\n                <h1>Transactions</h1>\n                <div className={classes.custRow}>\n                    <p>Sl No</p>\n                    <p>Sender</p>\n                    <p>Receiver</p>\n                    <p>Amount</p>\n                    <p>State</p>\n                </div>\n                {Object.keys(this.props.transactions).map((transaction, index) => (\n                    <Transaction transaction={this.props.transactions[transaction]} \n                            key={'_' + Math.random().toString(36).substr(2, 9)}\n                            index={index+1} />\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = state => {\n    return {\n        transactions: state.transaction.transactions\n    }\n}\n\nexport default connect(mapStatetoProps)(Transactions);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Header from '../Header/Header';\nimport Home from '../Home/Home';\nimport Customers from '../../containers/Customers/Customers';\nimport Customer from '../Customer/Customer';\nimport Receiver from '../../containers/Receiver/Receiver';\nimport Transfer from '../../containers/Transfer/Transfer';\nimport {ToastContainer} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\nimport Result from '../Result/Result';\nimport Transactions from '../../containers/Transactions/Transactions';\n\nconst Layout = (props) => {\n    return (\n        <div>\n            <Header />\n            <Switch>\n                <Route path=\"/transfers\" component={Transactions} />\n                <Route path=\"/result\" component={Result} />\n                <Route path=\"/transfer\" component={Transfer} />\n                <Route path=\"/receiver\" component={Receiver} />\n                <Route path=\"/customer/:id\" component={Customer} />\n                <Route path=\"/customers\" component={Customers} />\n                <Route path=\"/\" component={Home} />\n            </Switch>\n            <ToastContainer />\n        </div>\n    );\n}\n \nexport default Layout;","import './App.css';\nimport Layout from './components/Layout/Layout';\n\nimport {BrowserRouter} from 'react-router-dom';\n\nfunction App() {\n  return (\n    \n    <BrowserRouter>\n      <div className=\"App\">\n        <Layout />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n    users: [],\n    loading: false\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.GET_ALL_USERS:\n            return updateObject(state, {users: action.data});\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n    sender: {\n        id: \"\",\n        username: \"\",\n        email: \"\",\n        mobileNumber: \"\",\n        currentBalance: \"\"\n    },\n    receiver: {\n        id: \"\",\n        username: \"\",\n        email: \"\",\n        mobileNumber: \"\",\n        currentBalance: \"\"\n    },\n    transfer: false\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.ADD_SENDER:\n            return updateObject(state, {\n                sender: {\n                    id: action.data.id,\n                    username: action.data.username,\n                    email: action.data.email,\n                    mobileNumber: action.data.mobileNumber,\n                    currentBalance: action.data.currentBalance\n                }\n            });\n        case actionTypes.ADD_RECEIVER:\n            return updateObject(state, {\n                receiver: {\n                    id: action.data.id,\n                    username: action.data.username,\n                    email: action.data.email,\n                    mobileNumber: action.data.mobileNumber,\n                    currentBalance: action.data.currentBalance\n                }\n            });\n        case actionTypes.TRANSFER_SUCCESS:\n            return updateObject(state, {\n                transfer: true\n            });\n        case actionTypes.TRANSFER_COMPLETE:\n            return updateObject(state, {\n                transfer: false\n            });\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n    transactions: []\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case actionTypes.GET_ALL_TRANSACTIONS:\n            return updateObject(state, {\n                transactions: action.data\n            });\n        default:\n            return state;\n    }\n}\n \nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport { createStore, applyMiddleware, compose ,combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport axios from 'axios';\n\nimport userReducer from './store/reducers/user';\nimport transferReducer from './store/reducers/transfer';\nimport transactionReducer from './store/reducers/transaction';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\naxios.defaults.baseURL = \"https://basic-banking-app-abfa0-default-rtdb.firebaseio.com/\";\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  transfer: transferReducer,\n  transaction: transactionReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}